<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/21/2019 9:29:17 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-50T1H82M"
  DTS:CreatorName="LAPTOP-50T1H82M\Biruk"
  DTS:DTSID="{76F15FE2-C776-4810-8A94-4A00ADDDE2FC}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="1033"
  DTS:ObjectName="Pkg_stgRental"
  DTS:PackageType="5"
  DTS:VersionBuild="5"
  DTS:VersionGUID="{E78D4E1B-8568-48C8-92F9-6AB0967D2DC2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{929D4AF3-3095-4C12-8A0A-49905C576D6A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{86B85DA6-7B45-4DFD-9A31-82969F6D9C77}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarValue">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - End Time Logging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1fc25b5f-36bf-4f7a-8869-633cdd15a61f}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - End Time Logging"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Execute SQL Task - End Time Logging.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{a8f8d1cd-ccf8-44ec-b938-8901751d4481}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{e1d95efb-8f4d-431a-ae99-9a84444195d9}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="$Project::ParEndLog" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="System::PackageID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Start time Logging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0294dd03-4a43-4049-a207-2bdecab02c0f}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Start time Logging"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Execute SQL Task - Start time Logging.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{cddadc56-1f32-42ab-bff5-e82a4e866b1b}"
          DTS:EventID="393236"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{b3e8a422-d6f9-4c9f-b3bd-7f7cdcefcd5b}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="$Project::ParStartLog" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="System::PackageID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - Email End Notification"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{503e4e88-8a5a-485c-a68a-41d7c95c9d79}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Email End Notification"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Script Task - Email End Notification.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{84b4f1c9-0b26-4813-b097-f59e80dcb2ce}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{788513cd-d9dc-4b14-a458-9b6fb4c9cbf8}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_15f0a8a6944343f380fbd0467f91a4cc"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::PackageName,System::StartTime,User::VarRowCount,$Project::ParEmailFrom,$Project::ParEmailTo">
          <ProjectItem
            Name="ST_15f0a8a6944343f380fbd0467f91a4cc.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{ba38855a-9de9-46a6-a589-5aa861552692}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e6765987cbdb4366b385d86b362cd7d4</RootNamespace><AssemblyName>ST_15f0a8a6944343f380fbd0467f91a4cc</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST140</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion
using System.Net.Mail;

using System.Net;
namespace ST_e6765987cbdb4366b385d86b362cd7d4
    
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String SendMailFrom = Dts.Variables["$Project::ParEmailFrom"].Value.ToString();
            String SendMailTo = Dts.Variables["$Project::ParEmailTo"].Value.ToString();
            String SendMailSubject = "Notification Regarding " + Dts.Variables["System::PackageName"].Value.ToString() + " Package";
            String SendMailBody = "Package name: " + Dts.Variables["System::PackageName"].Value.ToString() + "\n" +
                                  "Row imported: " + Dts.Variables["User::VarRowCount"].Value.ToString() + "\n" +
                                              "End time: " + Dts.Variables["System::StartTime"].Value.ToString();

            try
            {
                MailMessage email = new MailMessage();
                SmtpClient SmtpServer = new SmtpClient("smtp.gmail.com");
                // START
                email.From = new MailAddress(SendMailFrom);
                email.To.Add(SendMailTo);
                email.Subject = SendMailSubject;
                email.Body = SendMailBody;
                //END

                SmtpServer.Port = 587;
                SmtpServer.Credentials = new System.Net.NetworkCredential(SendMailFrom, "0911948146");
                SmtpServer.EnableSsl = true;

                SmtpServer.Send(email);
                //MessageBox.Show("Email was Successfully Sent ");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_b43b8d33b3874a748ff84be0ca255248</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_b43b8d33b3874a748ff84be0ca255248</msb:DisplayName>
    <msb:ProjectId>{FAA66199-B248-4030-8B2A-33E7D57A6F4D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_15f0a8a6944343f380fbd0467f91a4cc.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Settings.get_Default():ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Sett" +
    "ings")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_b43b8d33b3874a748ff84be0ca255248.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKVz6VwAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAkjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEAyAABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAmBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB0
MgAAAAAAAEgAAAACAAUAUCIAADgPAAABAAAAAAAAAIgxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQB6AQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyLwAAcG8SAAAKbxMAAApvFAAACgtyWQAAcAIoEAAACm8RAAAK
cokAAHBvEgAACm8TAAAKbxQAAApysQAAcCgVAAAKDByNHQAAASUWcsMAAHCiJRcCKBAAAApvEQAA
CnKJAABwbxIAAApvEwAACm8UAAAKoiUYcuEAAHCiJRkCKBAAAApvEQAACnIBAQBwbxIAAApvEwAA
Cm8UAAAKoiUaciUBAHCiJRsCKBAAAApvEQAACnI9AQBwbxIAAApvEwAACm8UAAAKoigWAAAKDXMX
AAAKEwRyYQEAcHMYAAAKEQQGcxkAAApvGgAAChEEbxsAAAoHbxwAAAoRBAhvHQAAChEECW8eAAAK
JSBLAgAAbx8AAAolBnJ/AQBwcyAAAApvIQAACiUXbyIAAAoRBG8jAAAK3g1vFAAACigkAAAKJt4A
AigQAAAKFm8lAAAKKgAAARAAAAAA+QBnYAENEAAAAR4CKCYAAAoqHgIoJwAACiqufgEAAAQtHnKV
AQBw0AMAAAIoKAAACm8pAAAKcyoAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoe
AigrAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
bAQAACN+AADYBAAAkAYAACNTdHJpbmdzAAAAAGgLAAAIAgAAI1VTAHANAAAQAAAAI0dVSUQAAACA
DQAAuAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACcAAAAFAAAABgAAAAkA
AAABAAAAKwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAANADAQAA
AAAABgBeAt4EBgDtAt4EBgCqAcsEDwBSBQAABgDXAWUEBgBBAmUEBgAiAmUEBgDUAmUEBgB+AmUE
BgCXAmUEBgDuAWUEBgAJAhsDCgCyAl0DCgApAV0DDgCbAMADBgCNBA8EBgAfBA8EBgCNAcsEBgD9
BQ8EBgCuBP4EBgCeBFAEDgBdAaoDDgC+AaoDDgBFATsEBgByAd4ECgCYA10DEgCUBdQAEgCnANQA
BgA3Aw8EDgBDBsADDgDUBcADDgB3BMADDgCGAxAGDgBXBhAGFgBvBrcFFgAnBrcFBgD0AA8EBgCw
AA8EBgCHBmUEAAAAAEkAAAAAAAEAAQABABAAMAQBADkAAQABAAAAEAAFBWEFTQABAAMAAAEQAJ4F
YQVhAAMABwADAQAA6AUAAEUABAAKABEAJASnABEAGQGrABEAiwCvAAYGcQCzAFaAzAW2AFaA+QC2
AFAgAAAAAIYANgQGAAEA6CEAAAAAhhi+BAYAAQDwIQAAAACDGL4EBgABAPghAAAAAJMIqgS6AAEA
JCIAAAAAkwgBAb8AAQArIgAAAACTCA0BxAABADMiAAAAAJYIGwbKAAIAOiIAAAAAhhi+BAYAAgBC
IgAAAACRGMQEzwACAAAAAQAVAwkAvgQBABEAvgQGABkAvgQKACkAvgQQADEAvgQQADkAvgQQAEEA
vgQQAEkAvgQQAFEAvgQQAFkAvgQQAGEAvgQQAGkAvgQGAJEAvgQGALkAvgQVAMkAvgQGAHEA4AUk
ANEAkAUpANkABgQuAOEACwM0AJkANQM4AOkA9gU8AOkA9gVDAHkAvgQGAPEAvgQQAPkAvgQQAHkA
FgRJAHkAlwRPAAEBggAQAHkABAYQAHkAegYQAPEATgYBAAkBvgRVAPEApwVbAPEA+ANiAPEAhgBn
ABkBagZtANEANAYBAHEAvgQGAJkAvgQGACkBwgB0ACkBgwZ9AKEAvgSDAMEAvgQGAAgAFACdAAgA
GACiACkAcwAKAS4ACwDiAC4AEwDrAC4AGwAKAS4AIwATAS4AKwA8AS4AMwA8AS4AOwBCAS4AQwAT
AS4ASwBPAS4AUwA8AS4AWwBtAUMAYwCiAEkAcwAKAWEAewCiAGMAawCiABsAAwABAAQAAwAAAK4E
0wAAACEB2AAAAB8G3QACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAKwb8loAAAAAAAAl
AAAABAAAAAAAAAAAAAAAiwB5AAAAAAAOAAAAAAAAAAAAAACUAD4DAAAAAAQAAAAAAAAAAAAAAIsA
DwQAAAAADgAAAAAAAAAAAAAAlABSAAAAAAAEAAAAAAAAAAAAAACLALcFAAAAAAAAAAABAAAADwUA
AAUAAgAAAABTVF9lNjc2NTk4N2NiZGI0MzY2YjM4NWQ4NmIzNjJjZDdkNABTVF9iNDNiOGQzM2Iz
ODc0YTc0OGZmODRiZTBjYTI1NTI0OAA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFn
ZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBBZGQAU2VuZABkZWZhdWx0SW5zdGFuY2UATWFpbE1lc3Nh
Z2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJp
YnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFk
ZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJh
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
Z2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZh
bHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZl
ci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sATmV0
d29ya0NyZWRlbnRpYWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5
c3RlbS5OZXQuTWFpbABTVF9iNDNiOGQzM2IzODc0YTc0OGZmODRiZTBjYTI1NTI0OC5kbGwAc2V0
X0VuYWJsZVNzbABnZXRfSXRlbQBTeXN0ZW0Ac2V0X0Zyb20ARW51bQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAE1haWxBZGRyZXNzQ29sbGVjdGlvbgBFeGNlcHRpb24AZ2V0X1RvAEN1bHR1cmVJ
bmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZTY3NjU5
ODdjYmRiNDM2NmIzODVkODZiMzYyY2Q3ZDQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNUX2U2NzY1OTg3Y2JkYjQzNjZiMzg1ZDg2YjM2MmNkN2Q0LlByb3Bl
cnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMAU3lzdGVtLldpbmRv
d3MuRm9ybXMAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0
AE9iamVjdABzZXRfU3ViamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABz
ZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AHNldF9Qb3J0AElDcmVkZW50aWFsc0J5SG9zdABTaG93
AE1lc3NhZ2VCb3gAc2V0X0JvZHkAZ2V0X0Fzc2VtYmx5AAAtJABQAHIAbwBqAGUAYwB0ADoAOgBQ
AGEAcgBFAG0AYQBpAGwARgByAG8AbQAAKSQAUAByAG8AagBlAGMAdAA6ADoAUABhAHIARQBtAGEA
aQBsAFQAbwAAL04AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAAUgBlAGcAYQByAGQAaQBuAGcAIAAA
J1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAABEgAFAAYQBjAGsAYQBnAGUA
AB1QAGEAYwBrAGEAZwBlACAAbgBhAG0AZQA6ACAAAB8KAFIAbwB3ACAAaQBtAHAAbwByAHQAZQBk
ADoAIAAAI1UAcwBlAHIAOgA6AFYAYQByAFIAbwB3AEMAbwB1AG4AdAAAFwoARQBuAGQAIAB0AGkA
bQBlADoAIAAAI1MAeQBzAHQAZQBtADoAOgBTAHQAYQByAHQAVABpAG0AZQAAHXMAbQB0AHAALgBn
AG0AYQBpAGwALgBjAG8AbQAAFTAAOQAxADEAOQA0ADgAMQA0ADYAAHFTAFQAXwBlADYANwA2ADUA
OQA4ADcAYwBiAGQAYgA0ADMANgA2AGIAMwA4ADUAZAA4ADYAYgAzADYAMgBjAGQANwBkADQALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAA/VMNBcaDGSKaBRnntbqSd
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCAcFDg4ODhI9BCAAEmkEIAASbQUgARJxHAMgABwD
IAAOBgADDg4ODgUAAQ4dDgUgAQESfQUgABKAgQUgAgEODgYgAQESgIkEIAEBAgUgAQESPQYAARGA
kQ4IAAESgJURgJkFIAASgJ0HIAIBDhKAnQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJR
AwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJRBAgAElUECAASEAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZTY3
NjU5ODdjYmRiNDM2NmIzODVkODZiMzYyY2Q3ZDQAAAUBAAAAAAwBAAdIUCBJbmMuAAAdAQAYQ29w
eXJpZ2h0IEAgSFAgSW5jLiAyMDE5AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAaDIA
AAAAAAAAAAAAgjIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQyAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA2BAAAAAAAAAAAAAA2BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA8lqsGwAAAQDyWqwbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAElgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAcgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADAACAABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQACAASQBuAGMALgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwBlADYANwA2ADUAOQA4ADcAYwBiAGQAYgA0ADMANgA2AGIAMwA4
ADUAZAA4ADYAYgAzADYAMgBjAGQANwBkADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANwAwADgANAAuADIAMwAyADgAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABTAFQAXwBiADQAMwBiADgAZAAzADMAYgAzADgANwA0AGEANwA0ADgAZgBmADgA
NABiAGUAMABjAGEAMgA1ADUAMgA0ADgALgBkAGwAbAAAAFYAGQABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgAEkAbgBjAC4AIAAyADAA
MQA5AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBiADQAMwBiADgAZAAzADMA
YgAzADgANwA0AGEANwA0ADgAZgBmADgANABiAGUAMABjAGEAMgA1ADUAMgA0ADgALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AZQA2ADcANgA1ADkAOAA3AGMA
YgBkAGIANAAzADYANgBiADMAOAA1AGQAOAA2AGIAMwA2ADIAYwBkADcAZAA0AAAAQgAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAAOAA0AC4AMgAzADIAOAAyAAAA
AABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAAOAA0
AC4AMgAzADIAOAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAlDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - Email Start Notification"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{d71e4a76-a6b6-4fcb-b8cd-19f6cf5be57b}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Email Start Notification"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Script Task - Email Start Notification.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{e62bad69-0992-4d8e-b1e9-db1691987b4b}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{69d3fd55-180d-4b7e-ba36-b70921910c9a}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4e7acf8087224ba18d740d177da85b72"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::PackageName,System::StartTime,$Project::ParEmailFrom,$Project::ParEmailTo">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion
using System.Net.Mail;

using System.Net;
namespace ST_e6765987cbdb4366b385d86b362cd7d4
    
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String SendMailFrom = Dts.Variables["$Project::ParEmailFrom"].Value.ToString();
            String SendMailTo = Dts.Variables["$Project::ParEmailTo"].Value.ToString();
            String SendMailSubject = "Notification Regarding " + Dts.Variables["System::PackageName"].Value.ToString() + " Package";
            String SendMailBody = "Package name: " + Dts.Variables["System::PackageName"].Value.ToString() + "\n" +
                                  "Start time: " + Dts.Variables["System::StartTime"].Value.ToString();

            try
            {
                MailMessage email = new MailMessage();
                SmtpClient SmtpServer = new SmtpClient("smtp.gmail.com");
                // START
                email.From = new MailAddress(SendMailFrom);
                email.To.Add(SendMailTo);
                email.Subject = SendMailSubject;
                email.Body = SendMailBody;
                //END

                SmtpServer.Port = 587;
                SmtpServer.Credentials = new System.Net.NetworkCredential(SendMailFrom, "0911948146");
                SmtpServer.EnableSsl = true;

                SmtpServer.Send(email);
                //MessageBox.Show("Email was Successfully Sent ");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_0b92a255d84b46c39a23790d21033ac8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_0b92a255d84b46c39a23790d21033ac8</msb:DisplayName>
    <msb:ProjectId>{B7250366-3F94-4D5F-96C1-8BC50C8003CF}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4e7acf8087224ba18d740d177da85b72.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Settings.get_Default():ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Sett" +
    "ings")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_4e7acf8087224ba18d740d177da85b72.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{ba38855a-9de9-46a6-a589-5aa861552692}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e6765987cbdb4366b385d86b362cd7d4</RootNamespace><AssemblyName>ST_4e7acf8087224ba18d740d177da85b72</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST140</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_0b92a255d84b46c39a23790d21033ac8.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHJz6VwAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAGjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMgxAABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAIBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD8
MQAAAAAAAEgAAAACAAUAFCIAAPwOAAABAAAAAAAAABAxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQA+AQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyLwAAcG8SAAAKbxMAAApvFAAACgtyWQAAcAIoEAAACm8RAAAK
cokAAHBvEgAACm8TAAAKbxQAAApysQAAcCgVAAAKDHLDAABwAigQAAAKbxEAAApyiQAAcG8SAAAK
bxMAAApvFAAACnLhAABwAigQAAAKbxEAAApy/QAAcG8SAAAKbxMAAApvFAAACigWAAAKDXMXAAAK
EwRyIQEAcHMYAAAKEQQGcxkAAApvGgAAChEEbxsAAAoHbxwAAAoRBAhvHQAAChEECW8eAAAKJSBL
AgAAbx8AAAolBnI/AQBwcyAAAApvIQAACiUXbyIAAAoRBG8jAAAK3g1vFAAACigkAAAKJt4AAigQ
AAAKFm8lAAAKKgAAARAAAAAAvQBnJAENEAAAAR4CKCYAAAoqHgIoJwAACiqufgEAAAQtHnJVAQBw
0AMAAAIoKAAACm8pAAAKcyoAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigr
AAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAbAQA
ACN+AADYBAAAkAYAACNTdHJpbmdzAAAAAGgLAADIAQAAI1VTADANAAAQAAAAI0dVSUQAAABADQAA
vAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACcAAAAFAAAABgAAAAkAAAAB
AAAAKwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAANADAQAAAAAA
BgBeAt4EBgDtAt4EBgCqAcsEDwBSBQAABgDXAWUEBgBBAmUEBgAiAmUEBgDUAmUEBgB+AmUEBgCX
AmUEBgDuAWUEBgAJAhsDCgCyAl0DCgApAV0DDgCbAMADBgCNBA8EBgAfBA8EBgCNAcsEBgD9BQ8E
BgCuBP4EBgCeBFAEDgBdAaoDDgC+AaoDDgBFATsEBgByAd4ECgCYA10DEgCUBdQAEgCnANQABgA3
Aw8EDgBDBsADDgDUBcADDgB3BMADDgCGAxAGDgBXBhAGFgBvBrcFFgAnBrcFBgD0AA8EBgCwAA8E
BgCHBmUEAAAAAEkAAAAAAAEAAQABABAAMAQBADkAAQABAAAAEAAFBWEFTQABAAMAAAEQAJ4FYQVh
AAMABwADAQAA6AUAAEUABAAKABEAJASpABEAGQGtABEAiwCxAAYGcQC1AFaAzAW4AFaA+QC4AFAg
AAAAAIYANgQGAAEArCEAAAAAhhi+BAYAAQC0IQAAAACDGL4EBgABALwhAAAAAJMIqgS8AAEA6CEA
AAAAkwgBAcEAAQDvIQAAAACTCA0BxgABAPchAAAAAJYIGwbMAAIA/iEAAAAAhhi+BAYAAgAGIgAA
AACRGMQE0QACAAAAAQAVAwkAvgQBABEAvgQGABkAvgQKACkAvgQQADEAvgQQADkAvgQQAEEAvgQQ
AEkAvgQQAFEAvgQQAFkAvgQQAGEAvgQQAGkAvgQGAJEAvgQGALkAvgQVAMkAvgQGAHEA4AUkANEA
kAUpANkABgQuAOEACwM0AJkANQM4AOkA9gU8AOkA9gVDAHkAvgQGAPEAvgQQAPkAvgQQAHkAFgRL
AHkAlwRRAAEBggAQAHkABAYQAHkAegYQAPEATgYBAAkBvgRXAPEApwVdAPEA+ANkAPEAhgBpABkB
agZvANEANAYBAHEAvgQGAJkAvgQGACkBwgB2ACkBgwZ/AKEAvgSFAMEAvgQGAAgAFACfAAgAGACk
ACkAcwAMAS4ACwDkAC4AEwDtAC4AGwAMAS4AIwAVAS4AKwA+AS4AMwA+AS4AOwBEAS4AQwAVAS4A
SwBRAS4AUwA+AS4AWwBvAUMAYwCkAEkAcwAMAWEAewCkAGMAawCkABsAAwABAAQAAwAAAK4E1QAA
ACEB2gAAAB8G3wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAKwb2VoAAAAAAAAlAAAA
BAAAAAAAAAAAAAAAjQB5AAAAAAAOAAAAAAAAAAAAAACWAD4DAAAAAAQAAAAAAAAAAAAAAI0ADwQA
AAAADgAAAAAAAAAAAAAAlgBSAAAAAAAEAAAAAAAAAAAAAACNALcFAAAAAAAAAAABAAAADwUAAAUA
AgAAAABTVF9lNjc2NTk4N2NiZGI0MzY2YjM4NWQ4NmIzNjJjZDdkNABTVF8wYjkyYTI1NWQ4NGI0
NmMzOWEyMzc5MGQyMTAzM2FjOAA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBtc2NvcmxpYgBBZGQAU2VuZABkZWZhdWx0SW5zdGFuY2UATWFpbE1lc3NhZ2UA
VmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
cmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5T
Y3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sATmV0d29y
a0NyZWRlbnRpYWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5c3Rl
bS5OZXQuTWFpbABTVF8wYjkyYTI1NWQ4NGI0NmMzOWEyMzc5MGQyMTAzM2FjOC5kbGwAc2V0X0Vu
YWJsZVNzbABnZXRfSXRlbQBTeXN0ZW0Ac2V0X0Zyb20ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRN
YWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAE1haWxBZGRyZXNzQ29sbGVjdGlvbgBFeGNlcHRpb24AZ2V0X1RvAEN1bHR1cmVJbmZv
AGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZTY3NjU5ODdj
YmRiNDM2NmIzODVkODZiMzYyY2Q3ZDQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERl
YnVnZ2luZ01vZGVzAFNUX2U2NzY1OTg3Y2JkYjQzNjZiMzg1ZDg2YjM2MmNkN2Q0LlByb3BlcnRp
ZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMAU3lzdGVtLldpbmRvd3Mu
Rm9ybXMAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9i
amVjdABzZXRfU3ViamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRf
VGFza1Jlc3VsdABTbXRwQ2xpZW50AHNldF9Qb3J0AElDcmVkZW50aWFsc0J5SG9zdABTaG93AE1l
c3NhZ2VCb3gAc2V0X0JvZHkAZ2V0X0Fzc2VtYmx5AAAtJABQAHIAbwBqAGUAYwB0ADoAOgBQAGEA
cgBFAG0AYQBpAGwARgByAG8AbQAAKSQAUAByAG8AagBlAGMAdAA6ADoAUABhAHIARQBtAGEAaQBs
AFQAbwAAL04AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAAUgBlAGcAYQByAGQAaQBuAGcAIAAAJ1MA
eQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAABEgAFAAYQBjAGsAYQBnAGUAAB1Q
AGEAYwBrAGEAZwBlACAAbgBhAG0AZQA6ACAAABsKAFMAdABhAHIAdAAgAHQAaQBtAGUAOgAgAAAj
UwB5AHMAdABlAG0AOgA6AFMAdABhAHIAdABUAGkAbQBlAAAdcwBtAHQAcAAuAGcAbQBhAGkAbAAu
AGMAbwBtAAAVMAA5ADEAMQA5ADQAOAAxADQANgAAcVMAVABfAGUANgA3ADYANQA5ADgANwBjAGIA
ZABiADQAMwA2ADYAYgAzADgANQBkADgANgBiADMANgAyAGMAZAA3AGQANAAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAJzPdmdXHz9Nrr2roPADuEIABCABAQgDIAAB
BSABARERBCABAQ4FIAEBEVkIBwUODg4OEj0EIAASaQQgABJtBSABEnEcAyAAHAMgAA4GAAMODg4O
BwAEDg4ODg4FIAEBEn0FIAASgIEFIAIBDg4GIAEBEoCJBCABAQIFIAEBEj0GAAERgJEOCAABEoCV
EYCZBSAAEoCdByACAQ4SgJ0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSUQMGElUDBhIQ
AgYIAwYRFAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2U2NzY1OTg3Y2Jk
YjQzNjZiMzg1ZDg2YjM2MmNkN2Q0AAAFAQAAAAAMAQAHSFAgSW5jLgAAHQEAGENvcHlyaWdodCBA
IEhQIEluYy4gMjAxOQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA8DEAAAAAAAAA
AAAACjIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA2BAAAAAAAAAAAAAA2BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA2VqsGwAAAQDZWqwbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAElgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAcgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADAACAABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQACAASQBuAGMALgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwBlADYANwA2ADUAOQA4ADcAYwBiAGQAYgA0ADMANgA2AGIAMwA4
ADUAZAA4ADYAYgAzADYAMgBjAGQANwBkADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANwAwADgANAAuADIAMwAyADUANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABTAFQAXwAwAGIAOQAyAGEAMgA1ADUAZAA4ADQAYgA0ADYAYwAzADkAYQAyADMA
NwA5ADAAZAAyADEAMAAzADMAYQBjADgALgBkAGwAbAAAAFYAGQABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgAEkAbgBjAC4AIAAyADAA
MQA5AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwAwAGIAOQAyAGEAMgA1ADUA
ZAA4ADQAYgA0ADYAYwAzADkAYQAyADMANwA5ADAAZAAyADEAMAAzADMAYQBjADgALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AZQA2ADcANgA1ADkAOAA3AGMA
YgBkAGIANAAzADYANgBiADMAOAA1AGQAOAA2AGIAMwA2ADIAYwBkADcAZAA0AAAAQgAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAAOAA0AC4AMgAzADIANQA3AAAA
AABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAAOAA0
AC4AMgAzADIANQA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAHDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{b08f7ab7-ee4c-4231-b33f-621409557c68}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{f1dcbfe6-a812-4ef1-8af9-eeed375c8fd4}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - Rental (if Data does not exist)"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{a0be25a3-1dae-40d1-93e1-bfcc53c2566a}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{d7af26fe-ee99-498e-8e8e-5588b71252a9}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                  name="ADO NET Source"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement used by the component to extract data."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from rental</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                      name="AllowImplicitStringConversion">true</property>
                    <property
                      dataType="System.String"
                      description="The Source database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specify the mode to retrieve external column information"
                      name="AccessMode"
                      typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Connections[IDbConnection]"
                      connectionManagerID="{B92794DA-7CF4-4CB1-92FD-D0B65301C2AA}:external"
                      connectionManagerRefId="Project.ConnectionManagers[MySQLConnectionDicks]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output]"
                      name="ADO NET Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentalid]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[rentalid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentalid]"
                          name="rentalid"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[customerid]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[customerid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[customerid]"
                          name="customerid"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentaldate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[rentaldate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentaldate]"
                          name="rentaldate"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[returndate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[returndate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[returndate]"
                          name="returndate"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[last_update]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[last_update]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[last_update]"
                          name="last_update"
                          truncationRowDisposition="RedirectRow" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[rentalid]"
                          dataType="i4"
                          name="rentalid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[customerid]"
                          dataType="i4"
                          name="customerid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[rentaldate]"
                          dataType="dbTimeStamp"
                          name="rentaldate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[returndate]"
                          dataType="dbTimeStamp"
                          name="returndate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[last_update]"
                          dataType="dbTimeStamp"
                          name="last_update" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output]"
                      isErrorOut="true"
                      name="ADO NET Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentalid]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentalid]"
                          name="rentalid" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[customerid]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[customerid]"
                          name="customerid" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentaldate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentaldate]"
                          name="rentaldate" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[returndate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[returndate]"
                          name="returndate" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[last_update]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[last_update]"
                          name="last_update" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Output].Columns[RunDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Output].Columns[RunDate]"
                          name="RunDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Output].Columns[RunBy]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Output].Columns[RunBy]"
                          name="RunBy"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)"baname"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)"baname"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[stgRental]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{2D1F8954-21C8-46E9-AE6F-76CA9BDCCBB7}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.MPSTGT.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[rentalid]"
                          cachedDataType="i4"
                          cachedName="rentalid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RentalID]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentalid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[customerid]"
                          cachedDataType="i4"
                          cachedName="customerid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[customerid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[rentaldate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="rentaldate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RentalDate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentaldate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[returndate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="returndate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ReturnDate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[returndate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[last_update]"
                          cachedDataType="dbTimeStamp"
                          cachedName="last_update"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[last_update]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RunDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="RunDate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RunDate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Output].Columns[RunDate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RunBy]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="RunBy"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RunBy]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Output].Columns[RunBy]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RentalID]"
                          dataType="i4"
                          name="RentalID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          dataType="i4"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RentalDate]"
                          dataType="dbTimeStamp"
                          name="RentalDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ReturnDate]"
                          dataType="dbTimeStamp"
                          name="ReturnDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          dataType="dbTimeStamp2"
                          name="Last_Update"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RunDate]"
                          dataType="dbTimeStamp2"
                          name="RunDate"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RunBy]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="RunBy" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorStgRentalT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Connections[OleDbConnection]"
                      connectionManagerID="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.SSIS_Log.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[rentalid]"
                          cachedDataType="i4"
                          cachedName="rentalid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Rentalid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentalid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[customerid]"
                          cachedDataType="i4"
                          cachedName="customerid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Customerid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[customerid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[rentaldate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="rentaldate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Rentaldate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentaldate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[returndate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="returndate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Returndate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[returndate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[last_update]"
                          cachedDataType="dbTimeStamp"
                          cachedName="last_update"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[last_update]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Rentalid]"
                          dataType="i4"
                          name="Rentalid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Customerid]"
                          dataType="i4"
                          name="Customerid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Rentaldate]"
                          dataType="dbTimeStamp"
                          name="Rentaldate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Returndate]"
                          dataType="dbTimeStamp"
                          name="Returndate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          dataType="dbTimeStamp"
                          name="Last_Update" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 2"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorStgRentalT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Connections[OleDbConnection]"
                      connectionManagerID="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.SSIS_Log.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[rentalid]"
                          cachedDataType="i4"
                          cachedName="rentalid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Rentalid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentalid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[customerid]"
                          cachedDataType="i4"
                          cachedName="customerid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Customerid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[customerid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[rentaldate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="rentaldate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Rentaldate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentaldate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[returndate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="returndate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Returndate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[returndate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[last_update]"
                          cachedDataType="dbTimeStamp"
                          cachedName="last_update"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[last_update]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Rentalid]"
                          dataType="i4"
                          name="Rentalid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Customerid]"
                          dataType="i4"
                          name="Customerid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Rentaldate]"
                          dataType="dbTimeStamp"
                          name="Rentaldate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Returndate]"
                          dataType="dbTimeStamp"
                          name="Returndate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          dataType="dbTimeStamp"
                          name="Last_Update" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::VarRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[ADO NET Source Error Output]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  name="ADO NET Source Error Output"
                  startId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Error Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[ADO NET Source Output]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Inputs[Derived Column Input]"
                  name="ADO NET Source Output"
                  startId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source.Outputs[ADO NET Source Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[Derived Column Error Output]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                  name="Derived Column Error Output"
                  startId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Error Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[Derived Column Output]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Row Count.Inputs[Row Count Input 1]"
                  name="Derived Column Output"
                  startId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[Row Count Output 1]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5198df7d-1be9-4f57-bf49-1ea8010ed94e}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - Rental (If Data Exist)"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{1a32fe38-db14-428d-a750-3d4b2de7d81c}"
              DTS:EventID="729863679"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{7234606a-0fef-4984-b64b-3adeeaf03a25}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
                  name="ADO NET Source"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement used by the component to extract data."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from rental</property>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">30</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                      name="AllowImplicitStringConversion">true</property>
                    <property
                      dataType="System.String"
                      description="The Source database table name."
                      expressionType="Notify"
                      name="TableOrViewName"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specify the mode to retrieve external column information"
                      name="AccessMode"
                      typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Connections[IDbConnection]"
                      connectionManagerID="{B92794DA-7CF4-4CB1-92FD-D0B65301C2AA}:external"
                      connectionManagerRefId="Project.ConnectionManagers[MySQLConnectionDicks]"
                      description="Managed connection manager"
                      name="IDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output]"
                      name="ADO NET Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentalid]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[rentalid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentalid]"
                          name="rentalid"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[customerid]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[customerid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[customerid]"
                          name="customerid"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentaldate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[rentaldate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentaldate]"
                          name="rentaldate"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[returndate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[returndate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[returndate]"
                          name="returndate"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[last_update]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[last_update]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[last_update]"
                          name="last_update"
                          truncationRowDisposition="RedirectRow" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[rentalid]"
                          dataType="i4"
                          name="rentalid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[customerid]"
                          dataType="i4"
                          name="customerid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[rentaldate]"
                          dataType="dbTimeStamp"
                          name="rentaldate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[returndate]"
                          dataType="dbTimeStamp"
                          name="returndate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[last_update]"
                          dataType="dbTimeStamp"
                          name="last_update" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output]"
                      isErrorOut="true"
                      name="ADO NET Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentalid]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentalid]"
                          name="rentalid" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[customerid]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[customerid]"
                          name="customerid" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentaldate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentaldate]"
                          name="rentaldate" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[returndate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[returndate]"
                          name="returndate" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[last_update]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[last_update]"
                          name="last_update" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Output].Columns[RunDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Output].Columns[RunDate]"
                          name="RunDate"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Output].Columns[RunBy]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Output].Columns[RunBy]"
                          name="RunBy"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)"baname"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)"baname"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[stgRental]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{2D1F8954-21C8-46E9-AE6F-76CA9BDCCBB7}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.MPSTGT.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[rentalid]"
                          cachedDataType="i4"
                          cachedName="rentalid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RentalID]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentalid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[customerid]"
                          cachedDataType="i4"
                          cachedName="customerid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[customerid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[rentaldate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="rentaldate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RentalDate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentaldate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[returndate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="returndate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ReturnDate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[returndate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[last_update]"
                          cachedDataType="dbTimeStamp"
                          cachedName="last_update"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[last_update]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RunDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="RunDate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RunDate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Output].Columns[RunDate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RunBy]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="RunBy"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RunBy]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Output].Columns[RunBy]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RentalID]"
                          dataType="i4"
                          name="RentalID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          dataType="i4"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RentalDate]"
                          dataType="dbTimeStamp"
                          name="RentalDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ReturnDate]"
                          dataType="dbTimeStamp"
                          name="ReturnDate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          dataType="dbTimeStamp2"
                          name="Last_Update"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RunDate]"
                          dataType="dbTimeStamp2"
                          name="RunDate"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RunBy]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="RunBy" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorStgRentalT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Connections[OleDbConnection]"
                      connectionManagerID="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.SSIS_Log.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[rentalid]"
                          cachedDataType="i4"
                          cachedName="rentalid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Rentalid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentalid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[customerid]"
                          cachedDataType="i4"
                          cachedName="customerid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Customerid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[customerid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[rentaldate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="rentaldate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Rentaldate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[rentaldate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[returndate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="returndate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Returndate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[returndate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[last_update]"
                          cachedDataType="dbTimeStamp"
                          cachedName="last_update"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[last_update]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Rentalid]"
                          dataType="i4"
                          name="Rentalid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Customerid]"
                          dataType="i4"
                          name="Customerid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Rentaldate]"
                          dataType="dbTimeStamp"
                          name="Rentaldate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Returndate]"
                          dataType="dbTimeStamp"
                          name="Returndate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          dataType="dbTimeStamp"
                          name="Last_Update" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 2"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorStgRentalT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Connections[OleDbConnection]"
                      connectionManagerID="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.SSIS_Log.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[rentalid]"
                          cachedDataType="i4"
                          cachedName="rentalid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Rentalid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentalid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[customerid]"
                          cachedDataType="i4"
                          cachedName="customerid"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Customerid]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[customerid]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[rentaldate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="rentaldate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Rentaldate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[rentaldate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[returndate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="returndate"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Returndate]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[returndate]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[last_update]"
                          cachedDataType="dbTimeStamp"
                          cachedName="last_update"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output].Columns[last_update]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Rentalid]"
                          dataType="i4"
                          name="Rentalid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Customerid]"
                          dataType="i4"
                          name="Customerid" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Rentaldate]"
                          dataType="dbTimeStamp"
                          name="Rentaldate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Returndate]"
                          dataType="dbTimeStamp"
                          name="Returndate" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Last_Update]"
                          dataType="dbTimeStamp"
                          name="Last_Update" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::VarRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[ADO NET Source Error Output]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  name="ADO NET Source Error Output"
                  startId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Error Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[ADO NET Source Output]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Inputs[Derived Column Input]"
                  name="ADO NET Source Output"
                  startId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source.Outputs[ADO NET Source Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[Derived Column Error Output]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                  name="Derived Column Error Output"
                  startId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Error Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[Derived Column Output]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Row Count.Inputs[Row Count Input 1]"
                  name="Derived Column Output"
                  startId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[Row Count Output 1]"
                  endId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task  - Delete"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f46087bf-28fc-4cbf-b573-01fc3ae5b40f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task  - Delete"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Execute SQL Task  - Delete.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{efb9f110-f1e2-46dc-9d95-ebf3e907b626}"
              DTS:EventID="729863679"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{9457108c-5bf2-4f27-bcbc-b0cf0648bd66}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="$Project::ParDelete" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task - checking Rows"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6e99cfe6-141e-4076-b975-90612a5f320e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - checking Rows"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Execute SQL Task - checking Rows.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{102bd988-cce9-46dd-897d-f00497e7770c}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{01f3331b-810a-4e39-addf-70510652abf9}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="$Project::ParCheckData"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Val"
                SQLTask:DtsVariableName="User::VarValue" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{0ab497a3-20ab-42bc-af80-5b01cd56ede0}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::VarValue]==1"
          DTS:From="Package\Sequence Container\Execute SQL Task - checking Rows"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Execute SQL Task  - Delete" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{01b80bc0-adee-4da6-ab54-16461f3388f5}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::VarValue]==0"
          DTS:From="Package\Sequence Container\Execute SQL Task - checking Rows"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{ca7a672f-9154-4dd3-887e-e35c069daab5}"
          DTS:From="Package\Sequence Container\Execute SQL Task  - Delete"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{455d96c6-df5f-4fcc-9a98-70a1b7e165ff}"
      DTS:From="Package\Execute SQL Task - Start time Logging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{b6c98cfe-721b-4603-abe5-aa33865721eb}"
      DTS:From="Package\Script Task - Email Start Notification"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{fe4dba50-314b-4e74-84cb-5b16da15f0ef}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Execute SQL Task - End Time Logging" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{47efe09e-20af-458e-91ea-9d5471d46f06}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Script Task - Email End Notification" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="259,42"
          Id="Package\Execute SQL Task - End Time Logging"
          TopLeft="51.5,358.5" />
        <NodeLayout
          Size="261,42"
          Id="Package\Execute SQL Task - Start time Logging"
          TopLeft="47.5,11.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Script Task - Email End Notification"
          TopLeft="382,354" />
        <NodeLayout
          Size="249,42"
          Id="Package\Script Task - Email Start Notification"
          TopLeft="355.5,16.5" />
        <NodeLayout
          Size="253,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)"
          TopLeft="10.5,152.5" />
        <NodeLayout
          Size="232,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)"
          TopLeft="315,155" />
        <NodeLayout
          Size="207,42"
          Id="Package\Sequence Container\Execute SQL Task  - Delete"
          TopLeft="319.5,88.5" />
        <NodeLayout
          Size="243,42"
          Id="Package\Sequence Container\Execute SQL Task - checking Rows"
          TopLeft="133.5,18.5" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="294.166666666667,60.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="128.833333333333,28"
              Start="0,0"
              End="128.833333333333,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.30989370400654" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.30989370400654"
                    Point2="0,11.3098937040065"
                    Point3="4,11.3098937040065" />
                  <mssgle:LineSegment
                    End="124.833333333333,11.3098937040065" />
                  <mssgle:CubicBezierSegment
                    Point1="124.833333333333,11.3098937040065"
                    Point2="128.833333333333,11.3098937040065"
                    Point3="128.833333333333,15.3098937040065" />
                  <mssgle:LineSegment
                    End="128.833333333333,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="56.4166666666667,16.3098937040065,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="215.833333333333,60.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-78.8333333333333,92"
              Start="0,0"
              End="-78.8333333333333,84.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.1610793131643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.1610793131643"
                    Point2="0,37.1610793131643"
                    Point3="-4,37.1610793131643" />
                  <mssgle:LineSegment
                    End="-74.8333333333333,37.1610793131643" />
                  <mssgle:CubicBezierSegment
                    Point1="-74.8333333333333,37.1610793131643"
                    Point2="-78.8333333333333,37.1610793131643"
                    Point3="-78.8333333333333,41.1610793131643" />
                  <mssgle:LineSegment
                    End="-78.8333333333333,84.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.4166666666667,42.1610793131643,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="423,130.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8,24.5"
              Start="0,0"
              End="8,17">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.25"
                    Point2="0,12.25"
                    Point3="4,12.25" />
                  <mssgle:LineSegment
                    End="4,12.25" />
                  <mssgle:CubicBezierSegment
                    Point1="4,12.25"
                    Point2="8,12.25"
                    Point3="8,16.25" />
                  <mssgle:LineSegment
                    End="8,17" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="592,202"
          Size="592,246"
          Id="Package\Sequence Container"
          TopLeft="56.5,79.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="178,53.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77.1666666666667,26"
              Start="0,0"
              End="77.1666666666667,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.5579514824798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.5579514824798"
                    Point2="0,15.5579514824798"
                    Point3="4,15.5579514824798" />
                  <mssgle:LineSegment
                    End="73.1666666666667,15.5579514824798" />
                  <mssgle:CubicBezierSegment
                    Point1="73.1666666666667,15.5579514824798"
                    Point2="77.1666666666667,15.5579514824798"
                    Point3="77.1666666666667,19.5579514824798" />
                  <mssgle:LineSegment
                    End="77.1666666666667,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="355.5,37.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="94.3333333333333,42"
              Start="0,0"
              End="94.3333333333333,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="90.3333333333333,0" />
                  <mssgle:CubicBezierSegment
                    Point1="90.3333333333333,0"
                    Point2="94.3333333333333,0"
                    Point3="94.3333333333333,4" />
                  <mssgle:LineSegment
                    End="94.3333333333333,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="255.166666666667,325.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-74.1666666666667,33"
              Start="0,0"
              End="-74.1666666666667,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.2533692722372" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.2533692722372"
                    Point2="0,13.2533692722372"
                    Point3="-4,13.2533692722372" />
                  <mssgle:LineSegment
                    End="-70.1666666666667,13.2533692722372" />
                  <mssgle:CubicBezierSegment
                    Point1="-70.1666666666667,13.2533692722372"
                    Point2="-74.1666666666667,13.2533692722372"
                    Point3="-74.1666666666667,17.2533692722372" />
                  <mssgle:LineSegment
                    End="-74.1666666666667,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="449.833333333333,325.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="54.1666666666667,28.5"
              Start="0,0"
              End="54.1666666666667,21">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.44609164420485" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.44609164420485"
                    Point2="0,11.4460916442049"
                    Point3="4,11.4460916442049" />
                  <mssgle:LineSegment
                    End="50.1666666666667,11.4460916442049" />
                  <mssgle:CubicBezierSegment
                    Point1="50.1666666666667,11.4460916442049"
                    Point2="54.1666666666667,11.4460916442049"
                    Point3="54.1666666666667,15.4460916442049" />
                  <mssgle:LineSegment
                    End="54.1666666666667,21" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Execute SQL Task - End Time Logging.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{d2cb83e5-b815-40b1-923b-47ae17d547fe}"
          TopLeft="60,60" />
        <NodeLayout
          Size="209,42"
          Id="{0b8afe76-7ee6-477a-b987-d58916ae9991}"
          TopLeft="112,148" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Execute SQL Task - Start time Logging.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{0b8cdbbf-c52e-4c51-bce8-25a345e4a12b}"
          TopLeft="60,60" />
        <NodeLayout
          Size="209,42"
          Id="{f68222bb-7d76-4ea6-b621-26f00c76c9f3}"
          TopLeft="112,148" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Script Task - Email End Notification.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{582454b7-9b24-4a66-9a92-5a527e19684f}"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Script Task - Email Start Notification.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{c7875ae2-ca0a-4fb2-9848-94addc16e200}"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination"
          TopLeft="61,256.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\ADO NET Source"
          TopLeft="55,23.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Derived Column"
          TopLeft="61,112.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\Row Count"
          TopLeft="76.5,178" />
        <NodeLayout
          Size="180,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 1"
          TopLeft="314.5,19" />
        <NodeLayout
          Size="180,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist)\OLE DB Destination 2"
          TopLeft="322.5,108" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[ADO NET Source Output]"
          TopLeft="136,65.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[Derived Column Output]"
          TopLeft="139.75,154.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.5"
              Start="0,0"
              End="0,16">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[Row Count Output 1]"
          TopLeft="144,220">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.5"
              Start="0,0"
              End="0,29">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[ADO NET Source Error Output]"
          TopLeft="213,42.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="101.5,0"
              Start="0,0"
              End="94,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="94,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.439453125,5,134.87890625,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).Paths[Derived Column Error Output]"
          TopLeft="215,131.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107.5,0"
              Start="0,0"
              End="100,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="100,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-14.96138671875,5,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Data Flow Task - Rental (if Data does not exist).EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{dd160df6-08c1-4677-9f2c-18978604c9b7}"
          TopLeft="60,162" />
        <NodeLayout
          Size="209,42"
          Id="{4ea095c4-5f08-4fa3-a5b2-e555952479a9}"
          TopLeft="112,250" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination"
          TopLeft="56,262" />
        <NodeLayout
          Size="158,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source"
          TopLeft="50,29" />
        <NodeLayout
          Size="154,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Derived Column"
          TopLeft="56,118" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[ADO NET Source Output]"
          TopLeft="131,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="130,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\Row Count"
          TopLeft="71.5,183.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[Derived Column Output]"
          TopLeft="134.75,160">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.5"
              Start="0,0"
              End="0,16">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[Row Count Output 1]"
          TopLeft="139,225.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.5"
              Start="0,0"
              End="0,29">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1"
          TopLeft="309.5,24.5" />
        <NodeLayout
          Size="180,42"
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2"
          TopLeft="317.5,113.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[ADO NET Source Error Output]"
          TopLeft="208,47.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="101.5,0"
              Start="0,0"
              End="94,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="94,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.439453125,5,134.87890625,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).Paths[Derived Column Error Output]"
          TopLeft="210,136.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107.5,0"
              Start="0,0"
              End="100,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="100,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-14.96138671875,5,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Data Flow Task - Rental (If Data Exist).EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{c8334c32-bb3f-4ce6-86d2-4e3e8720bcf9}"
          TopLeft="82,82" />
        <NodeLayout
          Size="209,42"
          Id="{b1267720-5a6d-44c2-897f-453fe99c42b7}"
          TopLeft="128,172" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Execute SQL Task  - Delete.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{e62411e1-9dc9-4ccb-9611-363861768d08}"
          TopLeft="60,162" />
        <NodeLayout
          Size="209,42"
          Id="{31df29db-fe99-4450-bcef-d6767318cfca}"
          TopLeft="112,250" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Execute SQL Task - checking Rows.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{5d84666d-b441-4873-af22-3298e9d8852f}"
          TopLeft="91,72" />
        <NodeLayout
          Size="209,42"
          Id="{b81adb82-a564-4bcc-b75b-fde035021431}"
          TopLeft="124,183" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\ADO NET Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task - Rental (If Data Exist)\OLE DB Destination 2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>